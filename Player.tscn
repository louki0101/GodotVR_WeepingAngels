[gd_scene load_steps=14 format=2]

[ext_resource path="res://Player.gd" type="Script" id=1]
[ext_resource path="res://models/flashlight.glb" type="PackedScene" id=2]
[ext_resource path="res://AngelFreezer.gd" type="Script" id=3]

[sub_resource type="CapsuleShape" id=1]
radius = 1.4067
height = 0.448313

[sub_resource type="GDScript" id=2]
script/source = "extends ARVROrigin


func _ready():
	print(\"There are %d VR interfaces\" % ARVRServer.get_interface_count())
	for interface in ARVRServer.get_interfaces():
		print(\"VR: %s\" % interface)
	
	var arvr_interface = ARVRServer.find_interface(\"Oculus\")
	if arvr_interface:
		if arvr_interface.initialize():
			get_viewport().arvr = true
			#get_viewport().hdr = false
		
			OS.vsync_enabled = false
			Engine.target_fps = 90
		else:
			print(\"VR not initialized!\")
	else:
		print(\"VR not found!\")
"

[sub_resource type="GDScript" id=3]
script/source = "extends Spatial

func _physics_process(delta):
	# we keep this in line with our camera but we remove the tilt
	var new_transform = get_node(\"../ARVRCamera\").transform
	
	var new_basis = Basis()
	new_basis.z = Vector3(new_transform.basis.z.x, 0.0, new_transform.basis.z.z).normalized()
	if new_basis.z.length() > 0.5:
		new_basis.y - Vector3(0.0, 1.0, 0.0)
		new_basis.x = new_basis.y.cross(new_basis.z)
		new_transform.basis = new_basis
	
		transform = new_transform
	else:
		# we're looking straight up or down, ignore this
		pass"

[sub_resource type="SpatialMaterial" id=4]
flags_transparent = true
flags_unshaded = true
albedo_color = Color( 0.8, 0.0784314, 0.0784314, 0 )

[sub_resource type="GDScript" id=5]
script/source = "extends ARVRController

signal controller_activated(controller)
signal turn_cooled_down(controller)
signal turn_pressed(controller, stick_right)

var on_turn_cooldown = false


var components = Array()
var ws = 0

func _ready():
	# hide to begin with
	visible = false
	



func _process(delta):
	if !get_is_active():
		visible = false
		return
	
	
	if on_turn_cooldown == false and (get_joystick_axis(0) > 0.75 or get_joystick_axis(0) < -0.75):
		emit_signal(\"turn_pressed\", self, get_joystick_axis(0) < 0)
		on_turn_cooldown = true
		$TurnCooldownTimer.start()
	
	if visible:
		return
	
	# became active? lets handle it...
	var controller_name = get_controller_name()
	print(\"Controller \" + controller_name + \" became active\")
	
	# make it visible
	visible = true
	emit_signal(\"controller_activated\", self)
	
	
	


func _on_TurnCooldownTimer_timeout():
	on_turn_cooldown = false
	emit_signal(\"turn_cooled_down\", self)
"

[sub_resource type="SpatialMaterial" id=6]
albedo_color = Color( 0.611765, 0.611765, 0.611765, 1 )
metallic = 0.81
metallic_specular = 0.71
roughness = 0.5

[sub_resource type="SpatialMaterial" id=7]
albedo_color = Color( 0.992157, 1, 0.87451, 1 )
emission_enabled = true
emission = Color( 0.988235, 1, 0.764706, 1 )
emission_energy = 1.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="Animation" id=8]
resource_name = "Death"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("OVRFirstPerson/HUD_Anchor/CSGSphere:material:albedo_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.8, 0.0784314, 0.0784314, 0 ), Color( 0.8, 0.0784314, 0.0784314, 0.423529 ) ]
}

[sub_resource type="Animation" id=9]
resource_name = "Win"
tracks/0/type = "value"
tracks/0/path = NodePath("OVRFirstPerson/HUD_Anchor/CSGSphere:material:albedo_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.254902, 0.972549, 0.152941, 0 ), Color( 0.254902, 0.972549, 0.152941, 0.792157 ) ]
}

[sub_resource type="Animation" id=10]
tracks/0/type = "value"
tracks/0/path = NodePath("OVRFirstPerson/HUD_Anchor/CSGSphere:material:albedo_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.8, 0.0784314, 0.0784314, 0 ) ]
}

[node name="Player" type="KinematicBody"]
collision_layer = 3
script = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-008, -1, 0, 1, -4.37114e-008, 0, 1.64202, 0 )
shape = SubResource( 1 )

[node name="OVRFirstPerson" type="ARVROrigin" parent="."]
script = SubResource( 2 )

[node name="ARVRCamera" type="ARVRCamera" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.85, 0 )
fov = 65.0
near = 0.01
far = 1000.01

[node name="HUD_Anchor" type="Spatial" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.85, 0 )
script = SubResource( 3 )

[node name="CSGSphere" type="CSGSphere" parent="OVRFirstPerson/HUD_Anchor"]
invert_faces = true
radius = 0.11
material = SubResource( 4 )

[node name="Left_Hand" type="ARVRController" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 1.25, 0 )
controller_id = 1

[node name="Right_Hand" type="ARVRController" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 1.25, 0 )
controller_id = 2
script = SubResource( 5 )

[node name="TurnCooldownTimer" type="Timer" parent="OVRFirstPerson/Right_Hand"]
wait_time = 0.4
one_shot = true

[node name="SpotLight" type="SpotLight" parent="OVRFirstPerson/Right_Hand"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.0182352 )
spot_range = 18.1
spot_angle = 26.1065

[node name="FlashlightMesh" parent="OVRFirstPerson/Right_Hand" instance=ExtResource( 2 )]
transform = Transform( -0.0116816, 0, -0.999932, 0, 1, 0, 0.999932, 0, -0.0116816, 0, 0, 0 )

[node name="Flashlight" parent="OVRFirstPerson/Right_Hand/FlashlightMesh" index="0"]
material/0 = SubResource( 6 )

[node name="Glass" parent="OVRFirstPerson/Right_Hand/FlashlightMesh" index="1"]
material/0 = SubResource( 7 )

[node name="AngelFreezer" type="Spatial" parent="OVRFirstPerson/Right_Hand"]
script = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
pause_mode = 2
anims/Death = SubResource( 8 )
anims/Win = SubResource( 9 )
anims/_INIT = SubResource( 10 )
[connection signal="button_pressed" from="OVRFirstPerson/Right_Hand" to="." method="_on_Right_Hand_button_pressed"]
[connection signal="controller_activated" from="OVRFirstPerson/Right_Hand" to="." method="_on_Right_Hand_controller_activated"]
[connection signal="turn_pressed" from="OVRFirstPerson/Right_Hand" to="." method="_on_Right_Hand_turn_pressed"]
[connection signal="timeout" from="OVRFirstPerson/Right_Hand/TurnCooldownTimer" to="OVRFirstPerson/Right_Hand" method="_on_TurnCooldownTimer_timeout"]

[editable path="OVRFirstPerson/Right_Hand/FlashlightMesh"]
